{"version":3,"sources":["components/Welcome/Category.js","components/Welcome/Welcome.js","components/Prompt/Prompt.js","assets/images/bg-img.jpg","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Category","props","history","useHistory","Grow","in","style","transformOrigin","Button","onClick","push","value","sx","height","width","padding","textAlign","display","alignItems","justifyContent","textTransform","cursor","boxShadow","background","Typography","variant","color","fontFamily","name","categoryMap","Welcome","marginTop","Container","flexWrap","gap","map","cat","Prompt","useState","question","setQuestion","correct","idx","choices","setChoices","setCorrect","selected","setSelected","showAnswer","setShowAnswer","number","setNumber","formatString","string","htmlUnescape","useParams","useEffect","a","fetch","res","json","jsonres","trivia","results","rightIdx","Math","floor","random","newChoices","incorrect_answers","splice","correct_answer","formattedChoices","keys","Paper","component","choice","fontWeight","NavBar","AppBar","flexGrow","margin","marginLeft","marginRight","theme","createTheme","palette","type","primary","main","contrastText","secondary","error","warning","info","success","default","paper","text","spacing","shape","borderRadius","typography","body1","body2","overrides","MuiSwitch","root","switchBase","transform","opacity","border","thumb","track","backgroundColor","transition","responsiveFontSizes","App","ThemeProvider","Box","bgImg","backgroundPosition","backgroundSize","minHeight","paddingTop","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afe9d02e.chunk.js","sourcesContent":["import { Paper, Typography, Button, Grow } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory } from \"react-router\";\n\nexport default function Category(props) {\n    const history = useHistory()\n\n    return (\n        <Grow\n            in={true}\n            style={{ transformOrigin: '0 0 0' }}\n        >\n            <Button\n                onClick={() => history.push(`/category/${props.value}`)}\n                sx={{\n                    height: '12em',\n                    width: '24em',\n                    padding: 2,\n                    textAlign: 'center',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    textTransform: 'none',\n                    cursor: 'pointer',\n                    \":hover\": { boxShadow: '2px 1px 8px 0px rgba(0,0,0,0.75)' },\n                    background: 'linear-gradient(140deg, rgba(5,0,79,1) 0%, rgba(2,18,133,1) 29%, rgba(0,46,180,1) 54%, rgba(46,6,193,1) 76%, rgba(123,0,255,1) 100%);'\n                }}>\n                <Typography variant='h5' sx={{ color: 'white', fontFamily: 'Open Sans' }}>\n                    {props.name}\n                </Typography>\n            </Button>\n        </Grow>\n    )\n}","import { Container, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Category from \"./Category\";\n\nconst categoryMap = [{\n    name: 'Anime and Manga',\n    value: 31\n}, {\n    name: 'General Knowledge',\n    value: 9\n}, {\n    name: 'Books',\n    value: 10\n}, {\n    name: 'Film',\n    value: 11\n}, {\n    name: 'Music',\n    value: 12\n}, {\n    name: 'Television',\n    value: 14\n}, {\n    name: 'Video Games',\n    value: 15\n}, {\n    name: 'Board Games',\n    value: 16\n}, {\n    name: 'Science and Nature',\n    value: 17\n}, {\n    name: 'Mythology',\n    value: 20\n}, {\n    name: 'Sports',\n    value: 21\n}, {\n    name: 'Art',\n    value: 25\n}, {\n    name: 'Celebrities',\n    value: 26\n}, {\n    name: 'Animals',\n    value: 27\n}]\n\nexport default function Welcome(props) {\n    return (\n        <Box sx={{\n            textAlign: 'center', padding: 4\n        }}>\n            <Typography variant='h2'>Welcome!</Typography>\n            <Typography variant='h4' sx={{ marginTop: '32px' }}>To Your Beautiful Trivia Hub</Typography>\n            <Typography variant='h5' sx={{ marginTop: '32px' }}>Select a category below to start</Typography>\n            <Container sx={{ marginTop: 6, display: 'flex', flexWrap: 'wrap', gap: '32px', justifyContent: 'center', alignItems: 'center' }}>\n                {categoryMap.map(cat => {\n                    return <Category name={cat.name} value={cat.value} />\n                })}\n            </Container>\n        </Box>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { Paper, Typography, Button, Container } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useParams } from \"react-router\";\nimport { decode as htmlUnescape } from \"he\";\n\nexport default function Prompt(props) {\n    const [question, setQuestion] = useState(\"We're Loading. Till then, what's the first number?\")\n    const [choices, setChoices] = useState([{\n        value: '1',\n        correct: true,\n        idx: 1\n    }, {\n        value: '2',\n        correct: false,\n        idx: 2\n    }, {\n        value: '3',\n        correct: false,\n        idx: 3\n    }, {\n        value: '4',\n        correct: false,\n        idx: 4,\n    }\n    ])\n    const [correct, setCorrect] = useState(0)\n    const [selected, setSelected] = useState(-1)\n    const [showAnswer, setShowAnswer] = useState(false)\n    const [number, setNumber] = useState(0)\n\n    const formatString = (string) => {\n        return htmlUnescape(string)\n    }\n\n    const { value } = useParams()\n\n    useEffect(async () => {\n        const res = await fetch(`https://opentdb.com/api.php?amount=1&category=${value}&type=multiple`);\n        const jsonres = await res.json()\n\n        const trivia = jsonres.results[0]\n\n        const rightIdx = Math.floor(Math.random() * 4)\n\n        let newChoices = trivia.incorrect_answers\n        newChoices.splice(rightIdx, 0, trivia.correct_answer)\n\n        let formattedChoices = []\n\n        for (const idx of newChoices.keys()) {\n            formattedChoices.push({\n                value: formatString(newChoices[idx]),\n                idx: idx,\n            })\n        }\n\n        setQuestion(formatString(trivia.question))\n        setChoices(formattedChoices)\n        setCorrect(rightIdx)\n    }, [number])\n\n    return (\n        <Box>\n            <Container>\n                <Paper sx={{ padding: '2em', textAlign: 'center' }}>\n                    <Typography variant='h4' component='p'>\n                        {question}\n                    </Typography>\n                    <Box sx={{ marginTop: '2em' }}>\n                        {choices.map((choice) => {\n                            let color = 'primary'\n                            let variant = 'outlined'\n\n                            // We have to show selected if this is selected or (show answer and this is right)\n                            if (selected === choice.idx || (showAnswer && correct === choice.idx)) variant = 'contained'\n\n                            // We have to show answer and this choice is right (regardless of selected or not), we have to show the right answer\n                            if (showAnswer && correct === choice.idx) color = 'success'\n\n                            // We have to show answer, this is selected, and is wrong, we show it wrong\n                            if (showAnswer && selected === choice.idx && correct !== choice.idx) color = 'error'\n\n                            return (\n                                <Button\n                                    variant={variant}\n                                    color={color}\n                                    onClick={() => {\n                                        setSelected(choice.idx)\n                                        setShowAnswer(false) // The person changed their choice\n                                    }}\n                                    sx={{ textTransform: 'none', width: '100%', textAlign: 'center', padding: '1.5em', marginTop: '0.5em' }}>\n                                    <Typography variant='body1' sx={{ fontWeight: 'bold' }}>\n                                        {choice.value}\n                                    </Typography>\n                                </Button>\n                            )\n                        })}\n                        <Button\n                            variant='contained'\n                            color='secondary'\n                            onClick={() => setShowAnswer(true)}\n                            sx={{ textTransform: 'none', width: '100%', textAlign: 'center', padding: '1.5em', marginTop: '2.5em' }}>\n                            <Typography variant='body1' sx={{ fontWeight: 'bold' }}>\n                                SUBMIT\n                            </Typography>\n                        </Button>\n\n                        <Button\n                            variant='contained'\n                            color='secondary'\n                            onClick={() => {\n                                setShowAnswer(false)\n                                setSelected(-1)\n                                setNumber(number + 1)\n                            }}\n                            sx={{ textTransform: 'none', width: '100%', textAlign: 'center', padding: '1.5em', marginTop: '1em' }}>\n                            <Typography variant='body1' sx={{ fontWeight: 'bold' }}>\n                                NEXT\n                            </Typography>\n                        </Button>\n                    </Box>\n                </Paper>\n            </Container>\n        </Box >\n    )\n}","export default __webpack_public_path__ + \"static/media/bg-img.d5ff3e69.jpg\";","import { AppBar, Typography } from '@mui/material';\nimport {\n    useHistory,\n} from \"react-router-dom\";\n\nexport default function NavBar(props) {\n    const history = useHistory()\n\n    return (\n        <AppBar sx={{ padding: '8px' }}>\n            <Typography variant='h4' component=\"div\"\n                onClick={() => history.push(\"/\")}\n                sx={{ fontFamily: 'Satisfy', flexGrow: 1, margin: '8px', marginLeft: 'auto', marginRight: 'auto', cursor: 'pointer' }}>\n                Trivadda!\n            </Typography>\n        </AppBar>\n    )\n}","import { ThemeProvider } from '@mui/material/styles';\nimport { createTheme, responsiveFontSizes } from '@mui/material/styles';\nimport { Box } from '@mui/material';\nimport Welcome from './components/Welcome/Welcome';\nimport Prompt from './components/Prompt/Prompt';\nimport bgImg from './assets/images/bg-img.jpg'\nimport NavBar from './components/Navbar/Navbar';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nlet theme = createTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#009bff',\n      contrastText: '#ffffff',\n    },\n    secondary: {\n      main: '#8c00ff',\n    },\n    error: {\n      main: '#ff0040',\n    },\n    warning: {\n      main: '#ffea00',\n      contrastText: '#ffffff',\n    },\n    info: {\n      main: '#00d5ff',\n      contrastText: '#ffffff',\n    },\n    success: {\n      main: '#00e087',\n      contrastText: '#ffffff',\n    },\n    background: {\n      default: '#f7ffff',\n      paper: '#fcffff',\n    },\n    text: {\n      primary: '#001d30',\n      secondary: '#002136',\n    },\n  },\n  spacing: 16,\n  shape: {\n    borderRadius: 12,\n  },\n  typography: {\n    fontFamily: '\"Merriweather\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    body1: {\n      fontFamily: '\"Open Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n    body2: {\n      fontFamily: '\"Open Sans\", \"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n    },\n  },\n  overrides: {\n    MuiSwitch: {\n      root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: 8,\n      },\n      switchBase: {\n        padding: 1,\n        '&$checked, &$colorPrimary$checked, &$colorSecondary$checked': {\n          transform: 'translateX(16px)',\n          color: '#fff',\n          '& + $track': {\n            opacity: 1,\n            border: 'none',\n          },\n        },\n      },\n      thumb: {\n        width: 24,\n        height: 24,\n      },\n      track: {\n        borderRadius: 13,\n        border: '1px solid #bdbdbd',\n        backgroundColor: '#fafafa',\n        opacity: 1,\n        transition: 'background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms',\n      },\n    },\n  },\n});\n\ntheme = responsiveFontSizes(theme)\n\nfunction App() {\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <Box sx={{ flexGrow: 1, background: `url(${bgImg}) no-repeat`, backgroundPosition: 'center', backgroundSize: 'cover', minHeight: '100vh', paddingTop: '128px' }}>\n          <NavBar />\n          <Switch>\n            <Route path='/category/:value'>\n              <Prompt />\n            </Route>\n            <Route path='/'>\n              <Welcome />\n            </Route>\n          </Switch>\n        </Box>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}